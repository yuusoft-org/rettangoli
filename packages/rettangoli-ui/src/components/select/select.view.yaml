elementName: rtgl-select

viewDataSchema:
  type: object

propsSchema:
  type: object
  properties:
    options:
      type: array
      items:
        type: object
        properties:
          label:
            type: string
          value:
            type: any
    selectedValue:
      type: any
    placeholder:
      type: string
    onChange:
      type: function
    no-clear:
      type: boolean

refs:
  select-button:
    eventListeners:
      click:
        handler: handleButtonClick
  clear-button:
    eventListeners:
      click:
        handler: handleClearClick
  popover:
    eventListeners:
      close:
        handler: handleClickOptionsPopoverOverlay
  option-*:
    eventListeners:
      click:
        handler: handleOptionClick
      mouseenter:
        handler: handleOptionMouseEnter
      mouseleave:
        handler: handleOptionMouseLeave

events: {}

template:
  - rtgl-button#select-button v=ol ${containerAttrString}:
      - rtgl-view d=h av=c w=f:
          - rtgl-text c=${selectedLabelColor}: ${selectedLabel}
          - rtgl-view mh=md flex=1:
          - $if showClear:
              - rtgl-svg#clear-button mr=md svg=x wh=16 c=mu-fg cur=p:
          - rtgl-svg svg=chevronDown wh=16 c=mu-fg:
  - rtgl-popover#popover ?open=${isOpen} x=${position.x} y=${position.y} placement=right-start:
      - rtgl-view wh=300 g=xs slot=content bgc=background br=md sv=true:
          - $for option, i in options:
              - rtgl-view#option-${i} w=f ph=lg pv=md cur=p br=md bgc=${option.bgc}:
                  - rtgl-text: ${option.label}
