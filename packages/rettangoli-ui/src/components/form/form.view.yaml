elementName: rtgl-form

viewDataSchema:
  type: object

propsSchema:
  type: object
  properties:
    defaultValues:
      type: object
    context:
      type: object
    form:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        fields:
          type: array
          items:
            anyOf:
              - type: object
                properties:
                  name:
                    type: string
                  label:
                    type: string
                  description:
                    type: string
                  inputType:
                    const: inputText
                  placeholder:
                    type: string
                  tooltip:
                    type: object
                    properties:
                      content:
                        type: string
                required:
                  - name
                  - label
                  - inputType
                additionalProperties: false
              - type: object
                properties:
                  name:
                    type: string
                  label:
                    type: string
                  description:
                    type: string
                  inputType:
                    const: select
                  placeholder:
                    type: string
                  noClear:
                    type: boolean
                  addOption:
                    type: object
                    properties:
                      label:
                        type: string
                  options:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: any
                      required:
                        - label
                        - value
                  tooltip:
                    type: object
                    properties:
                      content:
                        type: string
                required:
                  - name
                  - label
                  - inputType
                  - options
                additionalProperties: false
              - type: object
                properties:
                  name:
                    type: string
                  label:
                    type: string
                  description:
                    type: string
                  inputType:
                    const: colorPicker
                  value:
                    type: string
                  tooltip:
                    type: object
                    properties:
                      content:
                        type: string
                required:
                  - name
                  - label
                  - inputType
                additionalProperties: false
              - type: object
                properties:
                  name:
                    type: string
                  label:
                    type: string
                  description:
                    type: string
                  inputType:
                    const: slider
                  min:
                    type: number
                  max:
                    type: number
                  step:
                    type: number
                  value:
                    type: number
                  tooltip:
                    type: object
                    properties:
                      content:
                        type: string
                required:
                  - name
                  - label
                  - inputType
                additionalProperties: false
              - type: object
                properties:
                  name:
                    type: string
                  label:
                    type: string
                  description:
                    type: string
                  inputType:
                    const: slider-input
                  min:
                    type: number
                  max:
                    type: number
                  step:
                    type: number
                  value:
                    type: number
                  tooltip:
                    type: object
                    properties:
                      content:
                        type: string
                required:
                  - name
                  - label
                  - inputType
                additionalProperties: false
              - type: object
                properties:
                  name:
                    type: string
                  label:
                    type: string
                  description:
                    type: string
                  inputType:
                    const: image
                  width:
                    type: number
                  height:
                    type: number
                  placeholder:
                    type: string
                  tooltip:
                    type: object
                    properties:
                      content:
                        type: string
                required:
                  - name
                  - label
                  - inputType
                additionalProperties: false
              - type: object
                properties:
                  name:
                    type: string
                  label:
                    type: string
                  description:
                    type: string
                  inputType:
                    const: waveform
                  width:
                    type: number
                  height:
                    type: number
                  placeholder:
                    type: string
                  defaultValue:
                    type: object
                  waveformData:
                    type: object
                  tooltip:
                    type: object
                    properties:
                      content:
                        type: string
                required:
                  - name
                  - label
                  - inputType
                additionalProperties: false
              - type: object
                properties:
                  name:
                    type: string
                  label:
                    type: string
                  description:
                    type: string
                  inputType:
                    const: popover-input
                  placeholder:
                    type: string
                  tooltip:
                    type: object
                    properties:
                      content:
                        type: string
                required:
                  - name
                  - label
                  - inputType
                additionalProperties: false
        actions:
          type: object
          properties:
            buttons:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  content:
                    type: string
                required:
                  - id
                  - content

refs:
  action-*:
    eventListeners:
      click:
        handler: handleActionClick
  tooltip-icon-*:
    eventListeners:
      mouseenter:
        handler: handleTooltipMouseEnter
      mouseleave:
        handler: handleTooltipMouseLeave
  field-*:
    eventListeners:
      input-change:
        handler: handleInputChange
      select-change:
        handler: handleSelectChange
      add-option-selected:
        handler: handleSelectAddOption
      colorpicker-change:
        handler: handleColorPickerChange
      slider-change:
        handler: handleSliderChange
      slider-input-value-change:
        handler: handleSliderInputChange
  image-*:
    eventListeners:
      click:
        handler: handleImageClick
      contextmenu:
        handler: handleImageClick
  waveform-*:
    eventListeners:
      click:
        handler: handleWaveformClick
      contextmenu:
        handler: handleWaveformClick

events:
  form-change: {}
  extra-event: {}
  action-click: {}

template:
  - rtgl-view w=f p=md g=lg ${containerAttrString}:
      - rtgl-view g=sm w=f:
          - $if title:
              - rtgl-text s=lg: ${title}
          - $if description:
              - rtgl-text c=mu-fg: ${description}
      - rtgl-view g=lg w=f:
          - $for field, i in fields:
              - rtgl-view g=md w=f:
                  - $if field.label || field.description:
                      - rtgl-view g=sm:
                          - rtgl-view d=h g=md av=c:
                              - $if field.label:
                                  - rtgl-text: ${field.label}
                              - $if field.label && field.tooltip:
                                  - rtgl-svg#tooltip-icon-${field.name} svg="info" wh=16 c=mu-fg cur=help ml=xs:
                          - $if field.description:
                              - rtgl-text s=sm c=mu-fg: ${field.description}
                  - $if field.inputType == "read-only-text":
                      - rtgl-text s=sm: ${field.defaultValue}
                  - $if field.inputType == "inputText" || field.inputType == 'input-text':
                      - rtgl-input#field-${field.name} w=f min=${field.min} max=${field.max} step=${field.step}:
                  - $if field.inputType == "input-number":
                      - rtgl-input-number#field-${field.name} w=f:
                  - $if field.inputType == "input-textarea":
                      - rtgl-textarea#field-${field.name} w=f rows=${field.rows} w=f:
                  - $if field.inputType == "popover-input":
                      - rtgl-popover-input#field-${field.name} label="${field.label}":
                  - $if field.inputType == "select":
                      - rtgl-select#field-${field.name} key=${key} w=f .options=fields[${i}].options ?no-clear=fields[${i}].noClear .addOption=fields[${i}].addOption .selectedValue=#{field.selectedValue}:
                  - $if field.inputType == "colorPicker":
                      - rtgl-color-picker#field-${field.name} key=${key}:
                  - $if field.inputType == "slider":
                      - rtgl-slider#field-${field.name} key=${key} w=f min=${field.min} max=${field.max} step=${field.step}:
                  - $if field.inputType == "slider-input":
                      - rtgl-slider-input#field-${field.name} w=f min=${field.min} max=${field.max} step=${field.step}:
                  - $if field.inputType == "image" && field.imageSrc:
                      - rtgl-image#image-${field.name} src=${field.imageSrc} w=${field.width} h=${field.height} cur=p:
                  - $if field.inputType == "image" && !field.imageSrc:
                      - rtgl-view#field-${field.name} w=${field.width} h=${field.height} bc=ac bw=sm ah=c av=c cur=p p=md:
                          - rtgl-text c=mu-fg ta=c: ${field.placeholderText}
                  - $if field.inputType == "waveform" && field.waveformData:
                      - rtgl-waveform#field-${field.name} .waveformData=fields[${i}].waveformData w=${field.width} h=${field.height} cur=p:
                  - $if field.inputType == "waveform" && !field.waveformData:
                      - rtgl-view#field-${field.name} w=${field.width} h=${field.height} bc=ac bw=sm ah=c av=c cur=p p=md:
                          - rtgl-text c=mu-fg ta=c: ${field.placeholder}
                  - $if field.inputType == "slot":
                      - 'slot#field-${field.slotName} name=${field.slot} style="display: contents;"':
      - rtgl-view g=sm w=f:
          - rtgl-view d=h ah=e g=sm w=f:
              - $for button, i in actions.buttons:
                  - rtgl-button#action-${button.id}: ${button.content}
      - rtgl-tooltip ?open=${tooltipState.open} x=${tooltipState.x} y=${tooltipState.y} placement="top" content="${tooltipState.content}":
